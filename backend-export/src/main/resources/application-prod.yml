# Production Configuration
server:
  port: 8080

spring:
  application:
    name: LMS Gaming Platform
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 60000
      idle-timeout: 300000
      max-lifetime: 900000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  thymeleaf:
    cache: true
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML

  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:your-email@domain.com}
    password: ${SMTP_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-for-production}
  expiration: 86400000           # 24 hours
  refresh-expiration: 604800000  # 7 days

app:
  name: LearnHub Gaming Platform
  version: 1.0.0
  frontend-url: ${FRONTEND_URL:https://your-domain.com}

stripe:
  api:
    key: ${STRIPE_SECRET_KEY:sk_live_your_stripe_secret_key}

zoom:
  api:
    key: ${ZOOM_API_KEY:your_zoom_api_key}
    secret: ${ZOOM_API_SECRET:your_zoom_api_secret}

logging:
  level:
    com.learnhub: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/lms-gaming-platform.log
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized